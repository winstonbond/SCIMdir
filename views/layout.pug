doctype html
html
  head
    title #{config.uiwords}
    link(rel='icon' type='image/png' href='/favicon.png')
    
    link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css')
    link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css')
 
    style.
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      footer {
        padding-top: 3rem;
        padding-bottom: 3rem;
      }

      footer p {
        margin-bottom: .25rem;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }
      
  script.
    const callBack = async (params) => {
      const response = await fetch('/api?' + params);
      console.log(response);
      return response.data;
    }

    async function poll_for_changes() {
        while(true) {
          let response = await fetch("/poll");

          if (response.status == 502) {
            // timeout - just reconnect
            continue;
          } else 
          if (response.status != 200) {
            // error - wait before retrying
            //console.log(response.statusText);
            await new Promise(resolve => setTimeout(resolve, 1000));
          } else {
            // server replied normally, refresh the page
            window.location.reload();
            //break;
          }
        }
    }    
    poll_for_changes(); 
    
  body
    include includes/header.pug
    
    main#main
      block content

    include includes/footer.pug
    
    script(src='https://code.jquery.com/jquery-3.4.1.slim.min.js')
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js')
    
  